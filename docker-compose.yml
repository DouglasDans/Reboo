services:
  postgres:
    container_name: rbo-postgres
    image: postgres
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  pgadmin:
    container_name: rbo-pgadmin
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres
    env_file:
      - ./backend/.env
    ports:
      - "5050:80"
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin

  backend:
    container_name: rbo-backend
    build: ./backend # pasta do dockerfile
    command: npm run start:dev
    ports:
      - 8080:8080
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/node_modules/@prisma/client:/app/node_modules/@prisma/client
    depends_on:
      - postgres
    develop: # Funcionalidades de dev
      watch: # hot reload configs
        - action: sync
          path: ./backend # pasta raíz do host
          target: /app # pasta raíz do container
          ignore:
            - node_modules
        - action: rebuild
          path: package.json
  
  frontend:
    container_name: rbo-frontend
    build: ./frontend
    command: npm run dev
    depends_on:
      - backend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    develop: # Funcionalidades de dev
      watch: # hot reload configs
        - action: sync
          path: ./frontend # pasta raíz do host
          target: /app # pasta raíz do container
          ignore:
            - node_modules
        - action: rebuild
          path: package.json
